syntax = "proto3";

package eventstore.streaming;

import "google/protobuf/any.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";

option csharp_namespace = "EventStore.Streaming.Contracts.Processors";

// The severity of reported component event.
enum EventSeverity {
  // The event is not recorded.
  EVENT_SEVERITY_NONE = 0;

  // The event is used for debugging purposes only.
  EVENT_SEVERITY_DEBUG = 1;

  // The event is informational.
  EVENT_SEVERITY_INFORMATION = 2;

  // The event should be treated as a warning.
  EVENT_SEVERITY_WARNING = 3;

  // The event should be treated as an error.
  EVENT_SEVERITY_ERROR = 4;

  // The event should be treated as a critical error.
  EVENT_SEVERITY_CRITICAL = 5;
}

enum ProcessorState {
  // Do not use this default value.
  PROCESSOR_STATE_UNSPECIFIED = 0;

  // The processor is initializing and getting ready to run.
  PROCESSOR_STATE_ACTIVATING = 1;

  // The processor has been successfully initialized and is currently running.
  PROCESSOR_STATE_RUNNING = 2;

  // The processor is paused. It is not consuming records, but it is still running.
  PROCESSOR_STATE_SUSPENDED = 3;

  // The processor is in the process of stopping.
  PROCESSOR_STATE_DEACTIVATING = 4;

  // The processor has been stopped, either due to a manual command or an error.
  PROCESSOR_STATE_STOPPED = 5;
}

enum ConsumeFilterScope {
  CONSUME_FILTER_SCOPE_UNSPECIFIED = 0;
  CONSUME_FILTER_SCOPE_STREAM      = 1;
  CONSUME_FILTER_SCOPE_RECORD      = 2;
}

message ConsumeFilter {
  ConsumeFilterScope scope  = 1;
  string             filter = 2;
}

message ProcessorMetadata {
  string         processor_id      = 1;
  string         processor_name    = 3;
  string         subscription_name = 5;
  ConsumeFilter  filter            = 7;
  ProcessorState state             = 9;
}

message EventMetadata {
  string                    event_id       = 1;
  EventSeverity             event_severity = 2;
  google.protobuf.Timestamp timestamp      = 3;
}

message ErrorDetails {
  string code          = 1;
  string error_message = 2;
}

message ProcessorStateChanged {
  ProcessorMetadata processor  = 1;
  EventMetadata     metadata   = 2;
  ErrorDetails      error      = 3;
  ProcessorState    from_state = 4;
  ProcessorState    to_state   = 5;
}